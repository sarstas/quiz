{"version":3,"file":"src_app_questions_index_ts.js","mappings":"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","sources":["./src/app/providers/question.resolver.ts","./src/app/providers/question.service.ts","./src/app/questions/edit-page/questions-edit-page.component.ts","./src/app/questions/edit-page/questions-edit-page.component.html","./src/app/questions/index.ts","./src/app/questions/master-page/questions-master-page.component.ts","./src/app/questions/master-page/questions-master-page.component.html","./src/app/questions/questions-routing.module.ts","./src/app/questions/questions.module.ts","./src/app/questions/questions/questions.component.ts","./src/app/questions/questions/questions.component.html"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\nimport { catchError, finalize, Observable, throwError } from 'rxjs';\nimport { Question } from '../entities/question';\nimport { QuestionService } from './question.service';\nimport { LoadingGlobalState } from './loading-global.state';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionResolver implements Resolve<Question | boolean> {\n  constructor(\n    private _questionService: QuestionService,\n    private _loadingGlobalState: LoadingGlobalState,\n    private _router: Router,\n  ) {\n  }\n\n  public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Question> | Promise<boolean> {\n    const id: number = +route.paramMap.get('id')!;\n\n    this._loadingGlobalState.loading = true;\n    return this._questionService.get(id).pipe(\n      finalize(() => this._loadingGlobalState.loading = false),\n      catchError((err) => {\n        this._router.navigate(['/']);\n        return throwError(err);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Question } from '../entities/question';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionService {\n  get api() {\n    return `/api/questions/`;\n  }\n\n  constructor(\n    private _http: HttpClient\n  ) {\n  }\n\n  public getAll(): Observable<Question[]> {\n    return this._http.get<Question[]>(`${this.api}`);\n  }\n\n  public get(id: number): Observable<Question> {\n    return this._http.get<Question>(`${this.api}${id}`);\n  }\n\n  public create(question: Question): Observable<Question> {\n    return this._http.post<Question>(`${this.api}`, question);\n  }\n\n  public edit(question: Question): Observable<Question> {\n    return this._http.put<Question>(`${this.api}${question.id}`, question);\n  }\n\n  public remove(id: number): Observable<unknown> {\n    return this._http.delete(`${this.api}${id}`);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Question } from '../../entities/question';\n\n@Component({\n  selector: 'app-questions-edit-page',\n  templateUrl: './questions-edit-page.component.html',\n})\nexport class QuestionsEditPageComponent implements OnInit {\n  public form!: FormGroup;\n\n  public question: Question | null = null;\n\n  constructor(\n    private _fb: FormBuilder,\n    private _activatedRoute: ActivatedRoute,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.question = this._activatedRoute.snapshot.data['question'];\n\n    this.form = this._fb.nonNullable.group({\n      question: ['']\n    });\n\n    if (this.question) {\n      this.form.patchValue(this.question);\n    }\n  }\n}\n","<div class=\"mt-3 container\">\n  <h1 class=\"mb-3\">{{question ? 'Edit Question' : 'Create a Question'}}</h1>\n\n  <form [formGroup]=\"form\">\n    <div class=\"mb-3\">\n      <label for=\"question\" class=\"form-label\">Question</label>\n      <textarea id=\"question\" class=\"form-control\" rows=\"3\" formControlName=\"question\"></textarea>\n    </div>\n\n    <div class=\"mb-3\">\n      <label for=\"desc\" class=\"form-label\">Description</label>\n      <textarea id=\"desc\" class=\"form-control\" rows=\"3\"></textarea>\n    </div>\n\n    <!--Options-->\n    <div class=\"mb-3\">\n      <h2>Answers</h2>\n\n      <select class=\"mb-3 form-select\" aria-label=\"Default select example\">\n        <option value=\"2\">Options</option>\n        <option value=\"1\">Text Field</option>\n      </select>\n\n      <!--            <div class=\"mb-3\">-->\n      <!--                <label for=\"answer\" class=\"form-label\">Answer</label>-->\n      <!--                <input type=\"text\" class=\"form-control\" id=\"answer\">-->\n      <!--            </div>-->\n\n      <div class=\"row mb-2 align-items-center\">\n        <div class=\"col\">\n          <input type=\"text\" class=\"form-control\">\n        </div>\n        <div class=\"col-auto\">\n          <div class=\"form-check\">\n            <input class=\"form-check-input\" type=\"checkbox\" id=\"correct1\">\n            <label class=\"form-check-label\" for=\"correct1\">\n              Correct?\n            </label>\n          </div>\n        </div>\n        <div class=\"col-auto\">\n          <button type=\"button\" class=\"btn btn-danger\">Remove</button>\n        </div>\n      </div>\n\n      <div class=\"row mb-2 align-items-center\">\n        <div class=\"col\">\n          <input type=\"text\" class=\"form-control\">\n        </div>\n        <div class=\"col-auto\">\n          <div class=\"form-check\">\n            <input class=\"form-check-input\" type=\"checkbox\" id=\"correct2\">\n            <label class=\"form-check-label\" for=\"correct2\">\n              Correct?\n            </label>\n          </div>\n        </div>\n        <div class=\"col-auto\">\n          <button type=\"button\" class=\"btn btn-danger\">Remove</button>\n        </div>\n      </div>\n      <button type=\"submit\" class=\"btn btn-outline-primary\">Add more</button>\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-primary\">Save</button>\n  </form>\n</div>\n","export { QuestionsModule } from './questions.module';\n\n","import { Component, OnInit } from '@angular/core';\nimport { QuestionService } from '../../providers/question.service';\nimport { Question } from '../../entities/question';\n\n@Component({\n  selector: 'app-questions-master-page',\n  templateUrl: './questions-master-page.component.html',\n})\nexport class QuestionsMasterPageComponent implements OnInit {\n  public questions: Question[] = [];\n\n  constructor(\n    private _questionService: QuestionService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this._questionService.getAll().subscribe(\n      (questions: Question[]) => this.questions = questions\n    );\n  }\n\n}\n","<div class=\"container\">\n  <h1 class=\"mb-3\">Questions</h1>\n</div>\n\n<div class=\"row mb-3\">\n  <div class=\"col\"></div>\n  <div class=\"col-auto\">\n    <a class=\"btn btn-outline-primary\" routerLink=\"/app/questions/create\">Create a Question</a>\n  </div>\n</div>\n\n<table class=\"table\">\n  <thead>\n  <tr>\n    <th>ID</th>\n    <th>Question text</th>\n    <th>Actions</th>\n  </tr>\n  </thead>\n  <tbody>\n  <tr *ngFor=\"let question of questions\">\n    <td>{{question.id}}</td>\n    <td>{{question.question}}</td>\n    <td class=\"text-nowrap\">\n      <a [routerLink]=\"['/app', 'questions', question.id]\" class=\"btn btn-outline-primary\">Edit</a>\n      &nbsp;\n      <button type=\"button\" class=\"btn btn-danger\" data-bs-toggle=\"modal\" data-bs-target=\"#confirm\">\n        Remove\n      </button>\n    </td>\n  </tr>\n  </tbody>\n</table>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NotFoundPageComponent } from '../not-found-page/not-found-page.component';\nimport { QuestionsMasterPageComponent } from './master-page/questions-master-page.component';\nimport { QuestionsEditPageComponent } from './edit-page/questions-edit-page.component';\nimport { QuestionsComponent } from './questions/questions.component';\nimport { QuestionResolver } from '../providers/question.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QuestionsComponent,\n    children: [\n      {\n        path: '',\n        component: QuestionsMasterPageComponent,\n      },\n      {\n        path: 'create',\n        component: QuestionsEditPageComponent,\n      },\n      {\n        path: ':id',\n        component: QuestionsEditPageComponent,\n        resolve: {\n          question: QuestionResolver\n        }\n      },\n      {\n        path: '**',\n        component: NotFoundPageComponent\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class QuestionsRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { QuestionsRoutingModule } from './questions-routing.module';\nimport { QuestionsMasterPageComponent } from './master-page/questions-master-page.component';\nimport { QuestionsEditPageComponent } from './edit-page/questions-edit-page.component';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { QuestionsComponent } from './questions/questions.component';\n\n@NgModule({\n  declarations: [\n    QuestionsMasterPageComponent,\n    QuestionsEditPageComponent,\n    QuestionsComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    ReactiveFormsModule,\n    QuestionsRoutingModule\n  ]\n})\nexport class QuestionsModule {\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-questions',\n  templateUrl: './questions.component.html',\n  styleUrls: ['./questions.component.scss']\n})\nexport class QuestionsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"mt-3 container\">\n  <router-outlet></router-outlet>\n</div>\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}